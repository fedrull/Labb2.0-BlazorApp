@page "/"
@using Labb2._0_BlazorApp.Models;
@using Labb2._0_BlazorApp.Data;
@using Microsoft.AspNetCore.Mvc;
@using Microsoft.EntityFrameworkCore;
@inject YourDbContext dbContext 
@inject NavigationManager NavigationManager


<div class="row">
	@foreach (var sourceStore in stores)
	{
		<div class="col-md-4">
			<div class="card">
				<div class="card-body">
					<h5 class="storename">@sourceStore.StoreNamn</h5>
					<p class="Adress">@sourceStore.Storedress</p>
				</div>
				<div>
					
						<input type="hidden" value="@sourceStore.StoreId" />

						<select id="Title" @bind="sourceStore.CardModel.Isbn">
							@foreach (var book in dbContext.BookStockInStore.Where(b => b.StoreId == sourceStore.StoreId))
							{
							<option value=@book.Isbn13>@book.Title @book.Stock st</option>
							}
						</select>

					<input type="number" @bind="sourceStore.CardModel.SelectedQuantity" placeholder="Antal" />

						<label for="destinationStoreId">Till butik:</label>
						<select @bind="sourceStore.CardModel.SelectedDestinationStoreId">
							@foreach (var destinationStore in stores.Where(s => s.StoreId != sourceStore.StoreId))
							{
								<option value="@destinationStore.StoreId">@destinationStore.StoreNamn</option>
							}
						</select>

					<button @onclick="() => MoveBook(sourceStore.StoreId, sourceStore.CardModel) ">Flytta</button>
					
				</div>
			</div>
		</div>
	}
</div>






@code {



	private string title;
	private int selectedqunety;
	private int slecteddestionStoreId;


	public void MoveBook(int sourceStoreId, StoreCardModel cardmodel)
	{
		// var sourceBook = dbContext.BookStockInStores1.FirstOrDefault(b => b.Title == title && b.StoreId == sourceStoreId);
		var sourceBook = dbContext.Books.FirstOrDefault(b => b.Isbn13 == cardmodel.Isbn);
		var bookstock = dbContext.Inventories.FirstOrDefault(i => i.Isbn == sourceBook.Isbn13 && i.InventoryId == sourceStoreId);

		if (sourceBook != null && bookstock.Stock >= cardmodel.SelectedQuantity)
		{
			// bookstock.Stock -= cardmodel.SelectedQuantity;

			// var destinationBook = dbContext.FirstOrDefault(b => b.Isbn13 == cardmodel.Isbn && b.StoreId == cardmodel.SelectedDestinationStoreId);

			// if (destinationBook == null)
			// {
			// 	dbContext.BookStockInStore.Add(new BookStockInStore { Isbn13 = cardmodel.Isbn, Stock = cardmodel.SelectedQuantity, StoreId = cardmodel.SelectedDestinationStoreId });
			// }
			// else
			// {
			// 	destinationBook.Stock += cardmodel.SelectedQuantity;
			// }

			dbContext.flyttabok(sourceBook.Isbn13, sourceStoreId, cardmodel.SelectedDestinationStoreId, cardmodel.SelectedQuantity);

			dbContext.SaveChanges();

			NavigationManager.NavigateTo("/");
		}
		else
		{

			NavigationManager.NavigateTo("/Eror");
		}
	}

	private List<Store> stores = new List<Store>();



	protected override async Task OnInitializedAsync()
	{
		stores = await dbContext.Stores.ToListAsync();
		foreach(var store in stores)
		{
			store.CardModel = new StoreCardModel();
		}
	}


}

